name: Main CI workflow
# Note: If the workflow name is changed, the CI badge URL in the README must also be updated

on:
  push:       # Push trigger runs on any pushed branch.
  schedule:   # Scheduled trigger runs on the latest commit on the default branch.
    - cron:  '0 22 * * *'

jobs:
  create-windows-binary-distribution:
    runs-on: windows-2019
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          lfs: false
      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}
      - name: Setup
        run: python continuous-integration\windows\setup.py
      - name: Create binary distribution
        env:
          Zivid_DIR: 'C:\Program Files\Zivid\CMake\Zivid'
          CXX: 'cl.exe'
          CC: 'cl.exe'
        run: python continuous-integration\windows\create_binary_distribution.py
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: bdist-win-python${{matrix.python-version}}
          path: dist/zivid*.whl
          retention-days: 1
      - name: Notify Teams
        if: ${{ failure() && github.ref == 'refs/heads/master' }}
        env:
          CI_FAILURE_TEAMS_HOOK: ${{ secrets.CI_FAILURE_TEAMS_HOOK }}
        run: python continuous-integration/notification/notify_teams.py --status ${{ job.status }}

  deploy:
    needs: [create-windows-binary-distribution]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          lfs: false
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Collect and check
        run: |
          docker run \
              --volume $PWD:/host \
              --workdir /host/continuous-integration/linux \
              --env "PYTHONDONTWRITEBYTECODE=1" \
              ubuntu:20.04 \
              bash -c "./collect-and-check-artifacts.sh"
      - name: Upload all as single artifact
        uses: actions/upload-artifact@v3
        with:
          name: distributions_all
          path: distribution/
      - name: Notify Teams
        if: ${{ failure() && github.ref == 'refs/heads/master' }}
        env:
          CI_FAILURE_TEAMS_HOOK: ${{ secrets.CI_FAILURE_TEAMS_HOOK }}
        run: python continuous-integration/notification/notify_teams.py --status ${{ job.status }}
